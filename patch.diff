From 38fc1bcd61cfffc662c1ff15c56f4f49b4975f32 Mon Sep 17 00:00:00 2001
From: saeyeong <syeongppp@gmail.com>
Date: Sat, 6 Jun 2020 16:23:23 +0900
Subject: [PATCH] =?UTF-8?q?[ADD]=20=EB=8C=93=EA=B8=80=20=EC=9E=85=EB=A0=A5?=
 =?UTF-8?q?=20=EC=B0=BD=EC=97=90=20=EB=8B=89=EB=84=A4=EC=9E=84=20=ED=91=9C?=
 =?UTF-8?q?=EC=8B=9C=20=EA=B8=B0=EB=8A=A5=20=EC=B6=94=EA=B0=80?=
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

---
 .../java/com/sae/colosseum/model/DataModel.kt |  3 ---
 .../sae/colosseum/model/entity/DataEntity.kt  |  6 +++--
 .../{TopicEntity.kt => ResponseEntity.kt}     |  8 +++---
 .../colosseum/model/entity/TopicDataEntity.kt |  7 ------
 .../sae/colosseum/network/RetrofitService.kt  | 16 ++++++------
 .../com/sae/colosseum/network/ServerClient.kt | 19 +++++++-------
 .../sae/colosseum/utils/GlobalApplication.kt  |  1 +
 .../sae/colosseum/utils/ResultInterface.kt    |  4 ++-
 .../com/sae/colosseum/view/TopicActivity.kt   | 25 +++++++++----------
 app/src/main/res/layout/activity_topic.xml    |  2 ++
 10 files changed, 44 insertions(+), 47 deletions(-)
 rename app/src/main/java/com/sae/colosseum/model/entity/{TopicEntity.kt => ResponseEntity.kt} (52%)
 delete mode 100644 app/src/main/java/com/sae/colosseum/model/entity/TopicDataEntity.kt

diff --git a/app/src/main/java/com/sae/colosseum/model/DataModel.kt b/app/src/main/java/com/sae/colosseum/model/DataModel.kt
index 1126bcf..f30273a 100644
--- a/app/src/main/java/com/sae/colosseum/model/DataModel.kt
+++ b/app/src/main/java/com/sae/colosseum/model/DataModel.kt
@@ -1,6 +1,5 @@
 package com.sae.colosseum.model
 
-import com.sae.colosseum.model.entity.TopicEntity
 import com.sae.colosseum.network.ServerClient
 import com.sae.colosseum.utils.GlobalApplication
 import kotlin.collections.ArrayList
@@ -8,8 +7,6 @@ import kotlin.collections.ArrayList
 class DataModel {
     var token: String? = GlobalApplication.prefs.myEditText
     var serverClient: ServerClient = ServerClient()
-    var topicEntity: ArrayList<TopicEntity> = ArrayList()
-    private var topicListEntity: ArrayList<TopicEntity> = ArrayList()
 //    var dataModel: DataModel = DataModel()
 //
 //    var test = ServerClient()
diff --git a/app/src/main/java/com/sae/colosseum/model/entity/DataEntity.kt b/app/src/main/java/com/sae/colosseum/model/entity/DataEntity.kt
index 786a494..07146fb 100644
--- a/app/src/main/java/com/sae/colosseum/model/entity/DataEntity.kt
+++ b/app/src/main/java/com/sae/colosseum/model/entity/DataEntity.kt
@@ -1,7 +1,9 @@
 package com.sae.colosseum.model.entity
 
-data class DataEntity(
+data class DataEntity (
     val user: UserEntity,
     val token: String,
-    val message: String
+    val topic: TopicInfoEntity,
+    val topics: ArrayList<TopicInfoEntity>,
+    val replies: List<RepliesEntity>
 )
\ No newline at end of file
diff --git a/app/src/main/java/com/sae/colosseum/model/entity/TopicEntity.kt b/app/src/main/java/com/sae/colosseum/model/entity/ResponseEntity.kt
similarity index 52%
rename from app/src/main/java/com/sae/colosseum/model/entity/TopicEntity.kt
rename to app/src/main/java/com/sae/colosseum/model/entity/ResponseEntity.kt
index 6b9aa21..bc97e57 100644
--- a/app/src/main/java/com/sae/colosseum/model/entity/TopicEntity.kt
+++ b/app/src/main/java/com/sae/colosseum/model/entity/ResponseEntity.kt
@@ -1,8 +1,8 @@
 package com.sae.colosseum.model.entity
 
-data class TopicEntity(
+data class ResponseEntity(
+    val token: String,
     val code: Int,
     val message: String,
-    val data: TopicDataEntity
-)
-
+    val data: DataEntity
+)
\ No newline at end of file
diff --git a/app/src/main/java/com/sae/colosseum/model/entity/TopicDataEntity.kt b/app/src/main/java/com/sae/colosseum/model/entity/TopicDataEntity.kt
deleted file mode 100644
index c120d3b..0000000
--- a/app/src/main/java/com/sae/colosseum/model/entity/TopicDataEntity.kt
+++ /dev/null
@@ -1,7 +0,0 @@
-package com.sae.colosseum.model.entity
-
-data class TopicDataEntity (
-    val topic: TopicInfoEntity,
-    val topics: ArrayList<TopicInfoEntity>,
-    val replies: List<RepliesEntity>
-)
\ No newline at end of file
diff --git a/app/src/main/java/com/sae/colosseum/network/RetrofitService.kt b/app/src/main/java/com/sae/colosseum/network/RetrofitService.kt
index f8f68b1..4e96b05 100644
--- a/app/src/main/java/com/sae/colosseum/network/RetrofitService.kt
+++ b/app/src/main/java/com/sae/colosseum/network/RetrofitService.kt
@@ -11,43 +11,43 @@ interface RetrofitService {
         @Field("email") email: String?,
         @Field("password") password: String?,
         @Field("nick_name") nickname: String?
-    ): Single<SignUpEntity>
+    ): Single<ResponseEntity>
 
     @POST("user")
     @FormUrlEncoded
     fun postUserInfo(
         @Field("email") email: String?,
         @Field("password") password: String?
-    ): Single<SignUpEntity>
+    ): Single<ResponseEntity>
 
     @GET("user_check")
     fun getUserIDCheck(
         @Query("type") type: String?,
         @Query("value") value: String?
-    ): Single<EmailCheckEntity>
+    ): Single<ResponseEntity>
 
     @GET("user_info")
     fun getUserTokenCheck(
         @Header("X-Http-Token") token: String?
-    ): Single<DataEntity>
+    ): Single<ResponseEntity>
 
     @GET("v2/main_info")
     fun getMainPostList(
         @Header("X-Http-Token") token: String?
-    ): Single<TopicEntity>
+    ): Single<ResponseEntity>
 
     @GET("topic/{topicId}")
     fun getTopic(
         @Header("X-Http-Token") token: String?,
         @Path("topicId") topicId: String?
-    ): Single<TopicEntity>
+    ): Single<ResponseEntity>
 
     @POST("topic_vote")
     @FormUrlEncoded
     fun postTopicVote(
         @Header("X-Http-Token") token: String?,
         @Field("side_id") sideId: Int?
-    ): Single<TopicEntity>
+    ): Single<ResponseEntity>
 
     @POST("topic_reply")
     @FormUrlEncoded
@@ -55,5 +55,5 @@ interface RetrofitService {
         @Header("X-Http-Token") token: String?,
         @Field("topic_id") topicId: Int?,
         @Field("content") content: String?
-    ): Single<TopicEntity>
+    ): Single<ResponseEntity>
 }
\ No newline at end of file
diff --git a/app/src/main/java/com/sae/colosseum/network/ServerClient.kt b/app/src/main/java/com/sae/colosseum/network/ServerClient.kt
index 3131df0..e118b59 100644
--- a/app/src/main/java/com/sae/colosseum/network/ServerClient.kt
+++ b/app/src/main/java/com/sae/colosseum/network/ServerClient.kt
@@ -5,9 +5,10 @@ import android.util.Log
 import androidx.recyclerview.widget.LinearLayoutManager
 import androidx.recyclerview.widget.RecyclerView
 import com.sae.colosseum.adapter.TopicListAdapter
-import com.sae.colosseum.model.entity.TopicEntity
+import com.sae.colosseum.model.entity.DataEntity
 import com.sae.colosseum.model.entity.TopicInfoEntity
 import com.sae.colosseum.utils.GlobalApplication
+import com.sae.colosseum.utils.GlobalApplication.Companion.userNickname
 import com.sae.colosseum.utils.ResultInterface
 import io.reactivex.android.schedulers.AndroidSchedulers
 import io.reactivex.rxkotlin.subscribeBy
@@ -27,7 +28,8 @@ class ServerClient() {
                 .observeOn(AndroidSchedulers.mainThread())
                 .subscribeBy(
                     onSuccess = {
-                        token = it.data?.token.toString()
+                        token = it.data.token
+                        userNickname = it.data.user.nick_name
                         GlobalApplication.prefs.myEditText = token
                         startActivity()
                     },
@@ -88,6 +90,7 @@ class ServerClient() {
             .observeOn(AndroidSchedulers.mainThread())
             .subscribeBy(
                 onSuccess = {
+                    userNickname = it.data.user.nick_name
                     mainActivity()
                 },
                 onError = {
@@ -97,18 +100,16 @@ class ServerClient() {
     }
 
     fun getMainPostList(token: String?, context: Context, postList: RecyclerView?) {
-        val topicEntity = ArrayList<TopicEntity>()
+        var topicEntity: ArrayList<TopicInfoEntity>
         var adapter: TopicListAdapter?
-        var topicDataEntity: ArrayList<TopicInfoEntity>
 
         network.server.getMainPostList(token)
             .subscribeOn(Schedulers.io())
             .observeOn(AndroidSchedulers.mainThread())
             .subscribeBy(
                 onSuccess = {
-                    topicEntity.add(it)
-                    topicDataEntity = topicEntity[0].data.topics
-                    adapter = TopicListAdapter(context, topicDataEntity)
+                    topicEntity= it.data.topics
+                    adapter = TopicListAdapter(context, topicEntity)
 
                     postList?.adapter = adapter
                     postList?.layoutManager = LinearLayoutManager(context)
@@ -121,14 +122,14 @@ class ServerClient() {
 
     fun getTopic(
         token: String?, topicId: Int?,
-        callback: ResultInterface<TopicEntity>
+        callback: ResultInterface<DataEntity>
     ) {
         network.server.getTopic(token, topicId.toString())
             .subscribeOn(Schedulers.io())
             .observeOn(AndroidSchedulers.mainThread())
             .subscribeBy(
                 onSuccess = {
-                    callback.result(it)
+                    callback.result(it.data)
                 },
                 onError = {
                     Log.d("test", it.message)
diff --git a/app/src/main/java/com/sae/colosseum/utils/GlobalApplication.kt b/app/src/main/java/com/sae/colosseum/utils/GlobalApplication.kt
index ab3856e..d7258a9 100644
--- a/app/src/main/java/com/sae/colosseum/utils/GlobalApplication.kt
+++ b/app/src/main/java/com/sae/colosseum/utils/GlobalApplication.kt
@@ -6,6 +6,7 @@ class GlobalApplication : Application() {
 
     companion object{
         lateinit var prefs : SharedPreferencesActivity
+        lateinit var userNickname : String
     }
 
     override fun onCreate() {
diff --git a/app/src/main/java/com/sae/colosseum/utils/ResultInterface.kt b/app/src/main/java/com/sae/colosseum/utils/ResultInterface.kt
index 7d7fb0c..45aa618 100644
--- a/app/src/main/java/com/sae/colosseum/utils/ResultInterface.kt
+++ b/app/src/main/java/com/sae/colosseum/utils/ResultInterface.kt
@@ -1,5 +1,7 @@
 package com.sae.colosseum.utils
 
+import com.sae.colosseum.model.entity.ResponseEntity
+
 interface ResultInterface<T> {
-    fun result(value:T)
+    fun result(value: T)
 }
\ No newline at end of file
diff --git a/app/src/main/java/com/sae/colosseum/view/TopicActivity.kt b/app/src/main/java/com/sae/colosseum/view/TopicActivity.kt
index 4819249..b0b7352 100644
--- a/app/src/main/java/com/sae/colosseum/view/TopicActivity.kt
+++ b/app/src/main/java/com/sae/colosseum/view/TopicActivity.kt
@@ -6,7 +6,6 @@ import androidx.appcompat.app.AppCompatActivity
 import android.os.Bundle
 import android.text.Editable
 import android.text.TextWatcher
-import android.util.Log
 import android.view.View
 import android.view.View.GONE
 import android.view.View.VISIBLE
@@ -16,12 +15,13 @@ import androidx.databinding.DataBindingUtil
 import androidx.recyclerview.widget.LinearLayoutManager
 import com.sae.colosseum.R
 import com.sae.colosseum.adapter.RepliesAdapter
-import com.sae.colosseum.adapter.TopicListAdapter
 import com.sae.colosseum.databinding.ActivityTopicBinding
-import com.sae.colosseum.model.entity.TopicEntity
+import com.sae.colosseum.model.entity.DataEntity
+import com.sae.colosseum.model.entity.ResponseEntity
 import com.sae.colosseum.model.entity.TopicInfoEntity
 import com.sae.colosseum.network.ServerClient
 import com.sae.colosseum.utils.GlobalApplication
+import com.sae.colosseum.utils.GlobalApplication.Companion.userNickname
 import com.sae.colosseum.utils.ResultInterface
 import kotlinx.android.synthetic.main.activity_topic.*
 
@@ -93,6 +93,7 @@ class TopicActivity : AppCompatActivity(), View.OnClickListener, TextWatcher {
     }
 
     fun init() {
+        binding.txtNickname.text = userNickname
         setListener()
         serverClient = ServerClient()
         token = GlobalApplication.prefs.myEditText
@@ -120,9 +121,9 @@ class TopicActivity : AppCompatActivity(), View.OnClickListener, TextWatcher {
     private fun setData() {
         var adapter: RepliesAdapter
 
-        serverClient?.getTopic(token, topicId, object : ResultInterface<TopicEntity> {
-            override fun result(value: TopicEntity) {
-                topicInfo = value.data.topic
+        serverClient?.getTopic(token, topicId, object : ResultInterface<DataEntity> {
+            override fun result(value: DataEntity) {
+                topicInfo = value.topic
 
                 topicInfo?.let {
                     txt_title.text = it.title
@@ -154,9 +155,7 @@ class TopicActivity : AppCompatActivity(), View.OnClickListener, TextWatcher {
     private fun topicReply(content: String) {
         serverClient?.postTopicReply(token, topicId, content, object : ResultInterface<Boolean> {
             override fun result(value: Boolean) {
-                if(value) {
-
-                } else {
+                if(!value) {
                     Toast.makeText(
                         this@TopicActivity,
                         "이미 의견을 작성하셨습니다.",
@@ -205,14 +204,14 @@ class TopicActivity : AppCompatActivity(), View.OnClickListener, TextWatcher {
     private fun clickUpColor() {
         binding.txtUp.setTextColor(ContextCompat.getColor(applicationContext, R.color.colorUp))
         binding.numUp.setTextColor(ContextCompat.getColor(applicationContext, R.color.colorUp))
-        binding.txtDown.setTextColor(ContextCompat.getColor(applicationContext, R.attr.itemTextColor))
-        binding.numDown.setTextColor(ContextCompat.getColor(applicationContext, R.attr.itemTextColor))
+        binding.txtDown.setTextColor(ContextCompat.getColor(applicationContext, android.R.color.tab_indicator_text))
+        binding.numDown.setTextColor(ContextCompat.getColor(applicationContext, android.R.color.tab_indicator_text))
     }
 
     @SuppressLint("ResourceType")
     private fun clickDownColor() {
-        binding.txtUp.setTextColor(ContextCompat.getColor(applicationContext, R.attr.itemTextColor))
-        binding.numUp.setTextColor(ContextCompat.getColor(applicationContext, R.attr.itemTextColor))
+        binding.txtUp.setTextColor(ContextCompat.getColor(applicationContext, android.R.color.tab_indicator_text))
+        binding.numUp.setTextColor(ContextCompat.getColor(applicationContext, android.R.color.tab_indicator_text))
         binding.txtDown.setTextColor(ContextCompat.getColor(applicationContext, R.color.colorDown))
         binding.numDown.setTextColor(ContextCompat.getColor(applicationContext, R.color.colorDown))
     }
diff --git a/app/src/main/res/layout/activity_topic.xml b/app/src/main/res/layout/activity_topic.xml
index 34b333f..f21a6a8 100644
--- a/app/src/main/res/layout/activity_topic.xml
+++ b/app/src/main/res/layout/activity_topic.xml
@@ -62,6 +62,8 @@
                 android:layout_width="match_parent"
                 android:layout_height="wrap_content"
                 android:text="복숭아는 딱딱복숭아가 맛있다. 아니다 물렁복숭아가 맛있다."
+
+                android:textColor="@android:color/tab_indicator_text"
                 android:textSize="18sp"
                 app:layout_constraintBottom_toBottomOf="parent"
                 app:layout_constraintEnd_toEndOf="parent"
-- 
2.24.1.windows.2

